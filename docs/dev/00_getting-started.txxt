                   Developer Quick Start

This guide helps you start contributing to tdh in minutes.

Prerequisites
-------------

• Go 1.23 or later
• Git
• A Unix-like environment (macOS, Linux, WSL)

Initial Setup
-------------

1. Clone and enter the repository:
   ```
   git clone https://github.com/arthur-debert/tdh.git
   cd tdh
   ```

2. Source the environment variables:
   ```
   source .envrc
   ```

3. Install pre-commit hooks (MANDATORY):
   ```
   scripts/pre-commit install
   ```

4. Run tests to verify setup:
   ```
   scripts/test
   ```

Essential Commands
------------------

• `scripts/build` - Build the CLI binary
• `scripts/test` - Run all tests with race detection
• `scripts/lint` - Run golangci-lint
• `scripts/test-with-cov` - Generate coverage report

Development Workflow
--------------------

1. Create a feature branch
2. Write tests first (TDD encouraged)
3. Implement with proper logging
4. Run tests and lint before committing
5. Pre-commit hooks will catch any issues

Key Rules
---------

• NO direct filesystem operations - use synthfs
• ALL errors need codes (not just messages)
• Logging is MANDATORY for new code
• Documentation must use txxt format
• Test error codes, never error messages

Next Steps
----------

• Read 10_conventions.txxt for detailed coding standards
• See 20_cli-architecture.txxt for CLI layer design
• Check docs/guides/10_understanding-tdh.txxt for concepts
• Browse pkg/testutil for test helpers

The pre-commit hooks enforce our standards automatically.
When in doubt, the hooks will guide you!