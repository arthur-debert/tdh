ID and Reference Design Specification

This document outlines the design for a new item identification system in tdh to improve usability and ergonomics.

1. Problem Analysis

The current system uses a simple incremental integer ID for each todo item. This leads to two main usability problems:
- Non-Sequential Numbers: When an item is completed or removed, its ID disappears, leaving gaps in the list (e.g., 1, 3, 4). This doesn't match the user's mental model of a simple list.
- Ever-Growing Numbers: Over time, these IDs become large (e.g., 432), making them cumbersome to type for common commands like `tdh rm 432`. This clashes with the goal of being a fast, convenient tool.

2. Core Design: Dual Identifier System

To solve this, we will adopt a dual identifier system for every todo item.

- ID (Internal): A permanent, stable, unique identifier (e.g., a UUID). This ID is never shown to the user. It is used internally for any logic that requires an unchanging reference to an item.

- Position (External): A mutable, sequential integer (1, 2, 3...). This is the number the user sees and interacts with in all commands. It represents the item's position in the full, unfiltered list.

The guiding philosophy is that the user's list should always look clean and sequential, like a paper to-do list.

3. Command Behavior

This new system will affect command behavior as follows:

- `tdh add "New item"`: The new item is assigned a unique internal ID and is appended to the list, receiving the next available Position number (e.g., if there are 3 items, the new one becomes Position 4).

- `tdh ls` and `tdh search`: These commands will always display the persistent Position number. When a list is filtered or searched, the displayed numbers will correspond to their position in the overall list, meaning they may appear non-sequential (e.g., a search result might show items 1 and 3). This is a crucial safety feature to ensure user actions are unambiguous.

- `tdh toggle <pos>`: This command will toggle the item at the specified Position. Immediately after the toggle is successful, the system will automatically perform a "reorder" operation in the background to compact the list and ensure all Position numbers are sequential again. This is a low-risk operation, as it's easily reversible.

- `tdh clean`: This command removes all completed (done) todos from the list. After the clean operation is successful, the system will automatically perform a "reorder" operation to ensure all remaining Position numbers are sequential again.

Note: tdh does not have a command to delete individual todos. The philosophy is that todos should be marked as done (`tdh toggle`) and then cleaned up in batch (`tdh clean`). This prevents accidental deletion of individual items and maintains a history of completed work until explicitly cleaned.